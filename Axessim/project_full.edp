// SHIELD
real rs = 2;

// WIRE 1
real rw1 = 0.2;

//WIRE 2
real rw2=0.8;

//WIRE 3 and 4
real rw34=0.2;
real epsilon=8.85418782e-12;

int nwires=5;


// Main wire (blindage) of radius rs
int omglabel=0;
border circleShield(t=0,2*pi){x=rs*cos(t);y=rs*sin(t);label=omglabel;};

real[int] X(4),Y(4);

// WIRE VIDE W1
X(0)=-1;Y(0)=0.;
border circleWire1(t=0,2*pi){x=X(0)+rw1*cos(t);y=Y(0)+rw1*sin(t);label=1;};

//WIRE W2
X(1)=1;Y(0)=0;
border circleWire2(t=0,2*pi){x=X(1)+rw2*cos(t);y=Y(1)+rw2*sin(t);label=2;};

//WIRE 3
X(2)=1;Y(2)=0.4;
border circleWire3(t=0,2*pi){x=X(2)+rw34*cos(t);y=Y(2)+rw34*sin(t);label=3;};

//WIRE 4
X(3)=1;Y(3)=-0.4;
border circleWire4(t=0,2*pi){x=X(3)+rw34*cos(t);y=Y(3)+rw34*sin(t);label=4;};

int m=5;
mesh Th;
Th=buildmesh(
	      circleShield(10*m)
	      +circleWire1(5*m)
	      +circleWire2(5*m)
	      +circleWire3(5*m)
	      +circleWire4(5*m));

plot(Th,wait=1);

macro Grad(u) [dx(u),dy(u)] //EOM

fespace Xh(Th,P2);
Xh u,v;
int iter=0;
real[int] pr(nwires);
real[int] dk(nwires);
Xh[int] ur(nwires+1);
// Variationnal form
problem Poisson(u,v)
     =  int2d(Th)( Grad(u)'*Grad(v) )
        +on(0,u=dk[0])
        +on(1,u=dk[1])
        +on(2,u=dk[2])
        +on(3,u=dk[3])
        +on(4,u=dk[4]);

for(iter=0;iter<nwires;++iter)
{
   dk=0;
   dk[iter]=1;
   pr=0;
   pr[iter]=1;
   Poisson;
   ur[iter]=u;
   plot(ur[iter],fill=1,wait=1,dim=3);
}


real[int,int] AP(nwires,nwires);
real[int] B(nwires);
real[int] PR(nwires);
Xh ui = 100;
for(int i=0;i<nwires;++i)
{
    B[i]=int2d(Th,omglabel)(ur[i]*ui);
    for(int j=0;j<nwires;++j)
       AP(i,j)= int2d(Th,omglabel)(ur[i]*ur[j]);
}

matrix A=AP;
//set(A,solver=UMFPACK);
set(A,solver=GMRES);
PR=A^-1*B;
cout << " P R = " << PR << endl;
u[]=0;
for (int i=0;i<nwires;++i)
  u[] += PR[i]*ur[i][];

real ErrL2 = sqrt(int2d(Th,omglabel)(square(u-ui)));
//real ErrL50 = int2d(Th,omglabel)(abs(u-ui)^50.)^(1./50.);
//Xh di=(u-ui)*(region==omglabel);
//real ErrLinty= di[].linfty;
cout << " Erreur L2 = " <<  ErrL2 << " L infty (L50)" << endl;
//     << ErrL50 << " ~ " << ErrLinty <<   endl;
//
plot(u,wait=1,value=1,nbiso=100,dim=3);
